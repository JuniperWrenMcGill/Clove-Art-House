{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chad\\\\Documents\\\\Bootcamp\\\\Project3\\\\project-3-team-3\\\\client\\\\src\\\\components\\\\buy\\\\buy.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './buy.css'; // Import CSS file for styling\n\n// WE WILL NEED TO REFACTOR THIS WHEN THE DB IS DEFINED \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Buy() {\n  _s();\n  const [lots, setLots] = useState([]);\n\n  // Simulated fetch of auction lots from the database\n  useEffect(() => {\n    // Assuming we will have a function to fetch lots from the backend\n    const fetchLots = async () => {\n      try {\n        // Make a fetch request to get auction lots from backend\n        const response = await fetch('backend_endpoint');\n        if (!response.ok) {\n          throw new Error('Failed to fetch auction lots');\n        }\n        // Parse the JSON response\n        const data = await response.json();\n        // Update the state with the fetched lots\n        setLots(data);\n      } catch (error) {\n        console.error(error);\n        // Handle errors\n      }\n    };\n\n    // Call the fetchLots function\n    fetchLots();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  const handleBidClick = lotId => {\n    // Redirect to the page dedicated to the clicked lot\n    console.log(`Bid button clicked for lot with ID: ${lotId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buy-page\",\n    children: lots.map(lot => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: lot.image_url,\n        alt: lot.description,\n        className: \"lot-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lot-description\",\n        children: lot.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bid-button\",\n        onClick: () => handleBidClick(lot.id),\n        children: \"Bid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, lot.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Buy, \"Cc+oNa6ZsyQI95Prm7sdQZeaDAM=\");\n_c = Buy;\nexport default Buy;\nvar _c;\n$RefreshReg$(_c, \"Buy\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Buy","_s","lots","setLots","fetchLots","response","fetch","ok","Error","data","json","error","console","handleBidClick","lotId","log","className","children","map","lot","src","image_url","alt","description","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Chad/Documents/Bootcamp/Project3/project-3-team-3/client/src/components/buy/buy.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './buy.css'; // Import CSS file for styling\n\n// WE WILL NEED TO REFACTOR THIS WHEN THE DB IS DEFINED \n\nfunction Buy() {\n  const [lots, setLots] = useState([]);\n\n  // Simulated fetch of auction lots from the database\n  useEffect(() => {\n    // Assuming we will have a function to fetch lots from the backend\n    const fetchLots = async () => {\n      try {\n        // Make a fetch request to get auction lots from backend\n        const response = await fetch('backend_endpoint');\n        if (!response.ok) {\n          throw new Error('Failed to fetch auction lots');\n        }\n        // Parse the JSON response\n        const data = await response.json();\n        // Update the state with the fetched lots\n        setLots(data);\n      } catch (error) {\n        console.error(error);\n        // Handle errors\n      }\n    };\n\n    // Call the fetchLots function\n    fetchLots();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  const handleBidClick = (lotId) => {\n    // Redirect to the page dedicated to the clicked lot\n    console.log(`Bid button clicked for lot with ID: ${lotId}`);\n  };\n\n  return (\n    <div className=\"buy-page\">\n      {/* Map through the lots array and render each lot */}\n      {lots.map((lot) => (\n        <div key={lot.id} className=\"lot-container\">\n          <img src={lot.image_url} alt={lot.description} className=\"lot-image\" />\n          <p className=\"lot-description\">{lot.description}</p>\n          {/* Pass the lot ID to handleBidClick when the bid button is clicked */}\n          <button className=\"bid-button\" onClick={() => handleBidClick(lot.id)}>Bid</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Buy;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW,CAAC,CAAC;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;QAChD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QACA;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC;QACAP,OAAO,CAACM,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB;MACF;IACF,CAAC;;IAED;IACAP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMS,cAAc,GAAIC,KAAK,IAAK;IAChC;IACAF,OAAO,CAACG,GAAG,CAAE,uCAAsCD,KAAM,EAAC,CAAC;EAC7D,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,UAAU;IAAAC,QAAA,EAEtBf,IAAI,CAACgB,GAAG,CAAEC,GAAG,iBACZpB,OAAA;MAAkBiB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACzClB,OAAA;QAAKqB,GAAG,EAAED,GAAG,CAACE,SAAU;QAACC,GAAG,EAAEH,GAAG,CAACI,WAAY;QAACP,SAAS,EAAC;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvE5B,OAAA;QAAGiB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAEE,GAAG,CAACI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpD5B,OAAA;QAAQiB,SAAS,EAAC,YAAY;QAACY,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAACM,GAAG,CAACU,EAAE,CAAE;QAAAZ,QAAA,EAAC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAJ1ER,GAAG,CAACU,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CA7CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}